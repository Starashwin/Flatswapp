# Generated by Django 2.1.5 on 2020-04-01 01:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=400)),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='property_images/', verbose_name='Image')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('property_id', models.AutoField(primary_key=True, serialize=False)),
                ('views', models.IntegerField(default=0)),
                ('likes', models.IntegerField(default=0)),
                ('slug', models.SlugField(unique=True)),
                ('name', models.TextField()),
                ('description', models.TextField(default='')),
                ('address', models.TextField(default='')),
                ('outdata', models.DateField(null=True)),
                ('n_bedrooms', models.IntegerField(default=0)),
                ('furnished', models.TextField(default='')),
                ('rent', models.IntegerField(default=0)),
                ('cover', models.ImageField(blank=True, upload_to='home_images/')),
                ('outward', models.TextField(default='')),
                ('nearest', models.TextField(default='')),
                ('neighbour', models.TextField(default='')),
                ('facility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp_flatswapp.Facility')),
            ],
            options={
                'verbose_name_plural': 'Properties',
            },
        ),
        migrations.CreateModel(
            name='Shortlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shortlisted', to='webapp_flatswapp.Property')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(default='', max_length=254)),
                ('mobile', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('picture', models.ImageField(blank=True, upload_to='profile_images')),
                ('address', models.TextField(default='')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='shortlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shortlisting', to='webapp_flatswapp.UserProfile'),
        ),
        migrations.AddField(
            model_name='property',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp_flatswapp.UserProfile'),
        ),
        migrations.AddField(
            model_name='images',
            name='property',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='webapp_flatswapp.Property'),
        ),
        migrations.AlterUniqueTogether(
            name='shortlist',
            unique_together={('user', 'property')},
        ),
    ]
